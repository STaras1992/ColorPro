[{"C:\\Projects\\color-pro\\src\\index.js":"1","C:\\Projects\\color-pro\\src\\components\\Palette.js":"2","C:\\Projects\\color-pro\\src\\components\\ColorBox.js":"3","C:\\Projects\\color-pro\\src\\utills\\seedColors.js":"4","C:\\Projects\\color-pro\\src\\App.js":"5","C:\\Projects\\color-pro\\src\\utills\\colorHelpers.js":"6","C:\\Projects\\color-pro\\src\\components\\Navbar.js":"7","C:\\Projects\\color-pro\\src\\constants\\formats.js":"8","C:\\Projects\\color-pro\\src\\components\\Footer.js":"9","C:\\Projects\\color-pro\\src\\components\\PaletteList.js":"10","C:\\Projects\\color-pro\\src\\components\\MiniPalette.js":"11"},{"size":263,"mtime":1606477558738,"results":"12","hashOfConfig":"13"},{"size":1661,"mtime":1606473467949,"results":"14","hashOfConfig":"13"},{"size":1248,"mtime":1606472717010,"results":"15","hashOfConfig":"13"},{"size":9847,"mtime":1606406516077,"results":"16","hashOfConfig":"13"},{"size":861,"mtime":1606477980314,"results":"17","hashOfConfig":"13"},{"size":1085,"mtime":1606417444830,"results":"18","hashOfConfig":"13"},{"size":1239,"mtime":1606488834252,"results":"19","hashOfConfig":"13"},{"size":83,"mtime":1606466646364,"results":"20","hashOfConfig":"13"},{"size":268,"mtime":1606472057328,"results":"21","hashOfConfig":"13"},{"size":1181,"mtime":1606491606672,"results":"22","hashOfConfig":"13"},{"size":1309,"mtime":1606491484073,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1fa05u1",{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Projects\\color-pro\\src\\index.js",[],"C:\\Projects\\color-pro\\src\\components\\Palette.js",["48","49"],"import React, { useState, useEffect } from 'react';\r\nimport Navbar from './Navbar.js';\r\nimport Footer from './Footer.js';\r\nimport ColorBox from './ColorBox';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nimport { HEX, RGB, RGBA } from '../constants/formats.js';\r\n\r\nimport 'rc-slider/assets/index.css';\r\nimport './styles/Palette.css';\r\n\r\nconst Palette = ({ palette }) => {\r\n  const [level, setLevel] = useState(500);\r\n  const [format, setFormat] = useState(HEX);\r\n  const [popUpOpen, setPopUpOpen] = useState(false);\r\n\r\n  const colorBoxes = palette.colors[level].map((color) => (\r\n    <ColorBox key={color.name} color={color[format]} colorName={color.name} />\r\n  ));\r\n\r\n  const updateSliderLevel = (newLevel) => {\r\n    setLevel(newLevel);\r\n  };\r\n\r\n  const updateColorFormat = (event) => {\r\n    setFormat(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setPopUpOpen(true);\r\n    setTimeout(() => setPopUpOpen(false), 2000);\r\n  }, [format]);\r\n\r\n  return (\r\n    <div className='palette'>\r\n      <Navbar sliderLevel={level} format={format} updateLevel={updateSliderLevel} updateFormat={updateColorFormat} />\r\n      <div className='palette-colors'>{colorBoxes}</div>\r\n      <div className='snackbar'>\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'left',\r\n          }}\r\n          open={popUpOpen}\r\n          message={<span in='messagePopUp'>{`Color format changed to ${format.toUpperCase()}`}</span>}\r\n          contentProps={{ 'aria-descrybedby': 'messagePopUp' }}\r\n        />\r\n      </div>\r\n      <Footer paletteName={palette.paletteName} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Palette;\r\n",["50","51"],"C:\\Projects\\color-pro\\src\\components\\ColorBox.js",["52","53","54"],"C:\\Projects\\color-pro\\src\\utills\\seedColors.js",[],"C:\\Projects\\color-pro\\src\\App.js",[],"C:\\Projects\\color-pro\\src\\utills\\colorHelpers.js",[],"C:\\Projects\\color-pro\\src\\components\\Navbar.js",[],"C:\\Projects\\color-pro\\src\\constants\\formats.js",[],"C:\\Projects\\color-pro\\src\\components\\Footer.js",[],"C:\\Projects\\color-pro\\src\\components\\PaletteList.js",["55"],"C:\\Projects\\color-pro\\src\\components\\MiniPalette.js",[],{"ruleId":"56","severity":1,"message":"57","line":7,"column":15,"nodeType":"58","messageId":"59","endLine":7,"endColumn":18},{"ruleId":"56","severity":1,"message":"60","line":7,"column":20,"nodeType":"58","messageId":"59","endLine":7,"endColumn":24},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"56","severity":1,"message":"65","line":1,"column":17,"nodeType":"58","messageId":"59","endLine":1,"endColumn":26},{"ruleId":"56","severity":1,"message":"66","line":9,"column":10,"nodeType":"58","messageId":"59","endLine":9,"endColumn":19},{"ruleId":"56","severity":1,"message":"67","line":9,"column":21,"nodeType":"58","messageId":"59","endLine":9,"endColumn":33},{"ruleId":"56","severity":1,"message":"68","line":4,"column":10,"nodeType":"58","messageId":"59","endLine":4,"endColumn":14},"no-unused-vars","'RGB' is defined but never used.","Identifier","unusedVar","'RGBA' is defined but never used.","no-native-reassign",["69"],"no-negated-in-lhs",["70"],"'useEffect' is defined but never used.","'isShowing' is assigned a value but never used.","'setIsShowing' is assigned a value but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]